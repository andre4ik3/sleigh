worker_processes 1;
user nobody nogroup;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  default_type application/octet-stream;
  server_names_hash_bucket_size 64;

  # SSL Optimization
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;

  # Gunicorn
  upstream gunicorn {
    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 127.0.0.1:8080 fail_timeout=0;
  }

  server {
    # Prevent Host Spoofing
    listen 8443 ssl default_server;
    listen [::]:8443 ssl default_server;
    client_max_body_size 4G;

    # SSL stuff
    ssl_certificate       ../config/ssl/server.pem;
    ssl_certificate_key   ../config/ssl/server.key;

    keepalive_timeout 5;
    return 444;
  }

  server {
    # use 'listen 8443 ssl deferred;' for Linux
    # use 'listen 8443 ssl accept_filter=httpready;' for FreeBSD
    listen 8443 ssl deferred;
    listen [::]:443 ssl;
    client_max_body_size 4G;

    # SSL stuff
    ssl_certificate       ../config/ssl/server.pem;
    ssl_certificate_key   ../config/ssl/server.key;

    # set the correct host(s) for your site
    server_name localhost;

    keepalive_timeout 5;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn;
    }
  }
}